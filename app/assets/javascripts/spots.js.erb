// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

var spots = [];
var map;
var positions = [];
var markers = [];
var yourPosition = {};
var yourPositionMarker;
var yourPositionMarkerLatitude;
var yourPositionMarkerLongitude;

getSpots();

function getSpots() {
	$.ajax({
		type: 'GET',
		dataType: 'json',
		url: '/spots',
		success: function(spotsResponse) { populateSpots(spotsResponse); console.log('OK1'); },
		error: function() { console.log('KO1'); }
	});	
}

function populateSpots(spotsResponse) {
	for(var i = 0; i < spotsResponse.length; i++) {
		spots.push(spotsResponse[i]);				
	}

	createMap();
}

function createMap() {
	var mapContainer = document.getElementById('map-container');

	var mapOptions = {
    	zoom: 11,
    	mapTypeId: google.maps.MapTypeId.ROAD,
    	styles: [{"featureType": "landscape","stylers": [{"hue": "#F1FF00"},{"saturation": -27.4},{"lightness": 9.4},{"gamma": 1}]},{"featureType": "road.highway","stylers": [{"hue": "#0099FF"},{"saturation": -20},{"lightness": 36.4},{"gamma": 1}]},{"featureType": "road.arterial","stylers": [{"hue": "#00FF4F"},{"saturation": 0},{"lightness": 0},{"gamma": 1}]},{"featureType": "road.local","stylers": [{"hue": "#FFB300"},{"saturation": -38},{"lightness": 11.2},{"gamma": 1}]},{"featureType": "water","stylers": [{"hue": "#00B6FF"},{"saturation": 4.2},{"lightness": -63.4},{"gamma": 1}]},{"featureType": "poi","stylers": [{"hue": "#9FFF00"},{"saturation": 0},{"lightness": 0},{"gamma": 1}]}]
  	};

  	map = new google.maps.Map(mapContainer, mapOptions);

  	createPositionsAndMarkers();
  	getYourPosition();  	
}

function createPositionsAndMarkers() {
	for(var i = 0; i < spots.length; i++) {
		var position = new google.maps.LatLng(spots[i].latitude, spots[i].longitude);
		positions.push(position);

		var marker = new google.maps.Marker({
			map: map,		    			
			position: position,
			icon: '/skateboard.png',
			title: (i + 1).toString(),
		});

		markers.push(marker);		    		
		addClickEventForEachMarker(marker);
	}
}

function addClickEventForEachMarker(marker) {
	google.maps.event.addDomListener(marker, 'click', function() {
		var spotId = marker.getTitle();

		var infoWindowSpotContent = '<a href=/spots/' + spotId + '><img class="marker-spot-photo" src=' + spots[spotId - 1].photo + '></a>';

    	var infoWindowSpot = new google.maps.InfoWindow({
    		content: infoWindowSpotContent
    	});

    	infoWindowSpot.open(map, marker);
    	setTimeout(function() { infoWindowSpot.close(); }, 5000);
	});
}

function coordinatesToAddress(yourLatitude, yourLongitude) {
	var geocoder = new google.maps.Geocoder();
	var latLng = new google.maps.LatLng(yourLatitude, yourLongitude);

	geocoder.geocode({ 'latLng': latLng }, function(results, status) {		
		if(status == google.maps.GeocoderStatus.OK) {
			if(results[0]) {
				var address = results[0].formatted_address;				
				var addressCorrection = [];

				for(var i = 0; i < address.length; i++) {
					if(address[i] == ' ') {
						addressCorrection += '-';		
					} else if(address[i] == ',') {
						addressCorrection += '_';
					} else {
						addressCorrection += address[i];
					}
				}

				var level = $('[id="spot-level"]').val();
				var photo = $('[id="spot-photo"]').val();
				
				var spot = {
					level: level,
					photo: photo,
					latitude: yourPositionMarkerLatitude,
					longitude: yourPositionMarkerLongitude,
					address: addressCorrection
				};

				$.ajax({
					type: 'POST',
					url: '/spots',
					data: { spot },
					dataType: 'json',
					success: function() { console.log('OK10'); },
					error: function() { console.log('KO10'); }
				});
			}			
		}	
	});
}

function getYourPosition() {
	if(navigator.geolocation) {
	    navigator.geolocation.getCurrentPosition(function(yourPositionResponse) {
	    	yourPosition = new google.maps.LatLng(yourPositionResponse.coords.latitude, yourPositionResponse.coords.longitude);

			yourPositionMarker = new google.maps.Marker({
    			map: map,
    			position: yourPosition,
    			draggable: true,
				icon: '/skater.png',
    			title: 'You are here!'
	    	});

	    	updateYourPosition(yourPositionMarker);

	    	var addSpotHref = '/spots/new?latitude=' + yourPositionMarkerLatitude + '&longitude=' + yourPositionMarkerLongitude;
	    	$('.add-spot').attr('href', addSpotHref);

	    	google.maps.event.addDomListener(yourPositionMarker, 'dragend', function() {
	    		updateYourPosition(yourPositionMarker);
	    	});

			map.setCenter(yourPosition);
	    }, function() {
	    	handleNoGeolocation(true);
	    });
    } else {
    	handleNoGeolocation(false);
  	}
}

function updateYourPosition(yourPositionMarker) {
	yourPositionMarkerLatitude = yourPositionMarker.getPosition().lat();
	yourPositionMarkerLongitude = yourPositionMarker.getPosition().lng();
}

function handleNoGeolocation(errorFlag) {
	if(errorFlag) {
    	console.log('The Geolocation service failed.');
    } else {
    	console.log('Your browser does not support geolocation.');
    }
}

$('.hearts').on('mouseover', function() {
	var trickId = $(this).data('trick-id');
	var heartsHovered = $(this).data('hearts');

	changeHeartsImage(trickId, heartsHovered);
});

$('.hearts').mouseout(function() {
	var trickId = $(this).data('trick-id');

	$('.hearts[data-trick-id=' + trickId + ']').attr('src', '/skateHeartBW.png');
});

$('.hearts').on('click', function() {		
	var trickId = $(this).data('trick-id');
	var heartsSelected = $(this).data('hearts');
	var spotId = $(this).data('spot-id');

	$('.hearts[data-trick-id=' + trickId + ']').unbind();
	changeHeartsImage(trickId, heartsSelected);	

	var trickRating = {
		trick_id: trickId,
		hearts_selected: heartsSelected
	};

	$.ajax({
		type: 'POST',
		url: '/spots/' + spotId + '/rate-trick',
		data: { trickRating },
		dataType: 'json',
		success: function() { console.log('OK9'); },
		error: function() { console.log('KO9'); }
	});
});

function changeHeartsImage(trickId, heartsHovered) {
	var sameTrickHearts = $('.hearts[data-trick-id=' + trickId + ']');

	for(var i = 0; i < heartsHovered; i++) {
		sameTrickHearts[i].setAttribute('src', '/skateHeart.png');
	}
}

$('.nearest-spot').on('click', function() {
	var distance = 0;
	var nearestDistance = 99999999999999999999;
	var nearestSpot = 0;

	for(var i = 0; i < positions.length; i++) {
		distance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(yourPositionMarkerLatitude, yourPositionMarkerLongitude), new google.maps.LatLng(positions[i].lat(), positions[i].lng()));
		
		if(distance < nearestDistance) {
			nearestDistance = distance;
			nearestSpot = i;
		}
	}

	var infoWindowNearestSpotContent = '<a href=/spots/' + (nearestSpot + 1) + '><img class="marker-spot-photo" src=' + spots[nearestSpot].photo + '></a>';
	
	var infoWindowNearestSpot = new google.maps.InfoWindow({
		content: infoWindowNearestSpotContent
	});

	infoWindowNearestSpot.open(map, markers[nearestSpot]);
	setTimeout(function() { infoWindowNearestSpot.close(); }, 5000);
});

$('.random-spot').on('click', function() {
	var randomSpot = Math.floor(Math.random() * (spots.length - 0)) + 0;
	var infoWindowRandomSpotContent = '<a href=/spots/' + (randomSpot + 1) + '><img class="marker-spot-photo" src=' + spots[randomSpot].photo + '></a>';

	var infoWindowRandomSpot = new google.maps.InfoWindow({
		content: infoWindowRandomSpotContent
	});

	infoWindowRandomSpot.open(map, markers[randomSpot]);
	setTimeout(function() { infoWindowRandomSpot.close(); }, 5000);
});

$('[data-action="add-spot-here"]').on('click', function() {
	coordinatesToAddress(yourPositionMarkerLatitude, yourPositionMarkerLongitude);	
});

$('[data-target="#myModal"]').on('click', function() {
	var challenger = 0;
	var skaters = [];
	var challenged = '';
	var spot = 0;
	var trick = '';

	$.ajax({
		type: 'GET',
		url: '/skaters',
		dataType: 'json',
		success: function(skatersResponse) {
			challenger = $('[data-action="add-challenge"]').data('challenger-id');

			for(var i = 0; i < skatersResponse.length; i++) {
				skaters.push(skatersResponse[i]);
			}

			$('.challenge-skaters').empty();

			for(var i = 0; i < skaters.length; i++) {
				$('.challenge-skaters').append('<button type="button" class="btn btn-default" data-action="select-skater">' + skaters[i].name + '</button>');
			}

			$('[data-action="select-skater"]').on('click', function() {
				challenged = $(this).text();
				$('[data-action="select-skater"]').not(this).attr('disabled', 'true');
			});

			$('.challenge-spots').empty();

			for(var i = 0; i < spots.length; i++) {
				$('.challenge-spots').append('<img src=' + spots[i].photo + ' class="marker-spot-photo" data-action="select-spot" data-spot=' + spots[i].id + '>');
			}

			$('[data-action="select-spot"]').on('click', function() {
				spot = $(this).data('spot');
				$(this).css('border', '5px solid #337ab7');
				$('[data-action="select-spot"]').unbind();
			});

			$('[data-action="add-challenge"]').unbind('click').on('click', function() {
				trick = $('#challenge-trick').val();

				var challenge = {
					challenger_id: challenger,
					challenged_name: challenged,
					spot_id: spot,
					challenge_trick: trick
				};

				$.ajax({
					type: 'POST',
					url: '/challenges',				
					data: { challenge },
					dataType: 'json',
					success: function() {
						$('.challenge-skaters').empty();
						$('.challenge-spots').empty();
						$('#challenge-trick').val('');
						console.log('OK4');						
					},
					error: function() { alert('KO4'); }
				});
			}); console.log('OK3');
		},
		error: function() { console.log('KO3'); }
	});
});

$('[data-action="check-attempt"]').on('click', function() {
	var challengeId = $('.panel').data('challenge-id');
	var attemptResult = $(this).text();

	var attempt = {
		challenge_id: challengeId,
		attempt_result: attemptResult
	};

	$.ajax({
		type: 'POST',
		url: '/challenges/check_attempt',
		data: { attempt },
		dataType: 'json',			
		success: function() { console.log('OK5'); },
		error: function() { console.log('KO5'); }
	});
});

$('[data-action="upload-trick"]').on('click', function() {
	var skaterId = $(this).data('skater-id');
	var spotId = $('.new-trick-button').data('spot-id');
	var trickVideo = $('#trick-video').val();		

	var trick = {
		skater_id: skaterId,
		spot_id: spotId,
		trick_video: trickVideo
	};

	$.ajax({
		type: 'POST',
	    url: '/skaters/' + skaterId + '/tricks',
	    data: { trick },
	    dataType: 'json',
	    success: function() { console.log('OK6'); },
	    error: function() { console.log('KO6'); }
	});
});

$('[data-action="upload-attempt"]').on('click', function() {
	var skaterId = $('[data-target="#myModal3"]').data('skater-id');
	var spotId = $('[data-target="#myModal3"]').data('spot-id');
	var trickVideo = $('#attempt-video').val();		
	var challengeId = $('[data-target="#myModal3"]').data('challenge-id');

	var attempt = {
		skater_id: skaterId,
		spot_id: spotId,
		trick_video: trickVideo,
		challenge_id: challengeId
	};

	$.ajax({
		type: 'POST',
	    url: '/challenges/make_an_attempt',
	    data: { attempt },
	    dataType: 'json',
	    success: function() { console.log('OK7'); },
	    error: function() { console.log('KO7'); }
	});
});

$('[data-target="#myModal4"]').on('click', function() {
	var role;
});

$('[data-role]').on('click', function() {
	role = $(this).data('role');
});

$('[data-action="join-jam"]').on('click', function() {
	var jamId = $('[data-target="#myModal4"]').data('jam-id');
	var attendance = {
		role: role
	};

	$.ajax({
		type: 'POST',
	    url: '/jams/' + jamId + '/skaters',
	    data: { attendance },
	    dataType: 'json',
	    success: function() { console.log('OK8'); },
	    error: function() { console.log('KO8'); }
	});
});